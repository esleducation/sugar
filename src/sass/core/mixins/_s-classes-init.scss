//
// Classes
//
$_sugar-classes-inited : false;
@mixin s-classes-init() {
	@if not $_sugar-classes-inited {
		$_sugar-classes-inited : true !global;

		$filters : sugar('settings.filters');
		@each $name, $filter in $filters {
			@include s-register-class(
				$classname : 'f-#{$name}',
				$namespace : 'sugar.filter.#{$name}'
			) {
				@include s-filter($filter);
			}
		}

		// transitions
		$transitions : sugar('settings.transitions');
		@each $name, $transition in $transitions {
			@include s-register-class(
				$classname : 't-#{$name}',
				$namespace : 'sugar.transition.#{$name}'
			) {
				@include s-transition($transition);
			}
		}

		$vertical-rhythme-scope : sugar('settings.vertical-rhythme.scope-class');
		$sizes : sugar('settings.sizes');
		@each $name, $size in $sizes {
			$cname : 'm-b-#{$name}';
			@if $name == 'default' {
				$cname : 'm-b';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.margin.bottom.#{$name}'
			) {
				margin-bottom : s-space($name);
			}
			$cname : 'm-t-#{$name}';
			@if $name == 'default' {
				$cname : 'm-t';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.margin.top.#{$name}'
			) {
				margin-top : s-space($name);
			}
			$cname : 'm-l-#{$name}';
			@if $name == 'default' {
				$cname : 'm-l';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.margin.left.#{$name}'
			) {
				margin-left : s-space($name);
			}
			$cname : 'm-r-#{$name}';
			@if $name == 'default' {
				$cname : 'm-r';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.margin.right.#{$name}'
			) {
				margin-right : s-space($name);
			}
			$cname : 'm-s-#{$name}';
			@if $name == 'default' {
				$cname : 'm-s';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.margin.side.#{$name}'
			) {
				margin-left : s-space($name);
				margin-right : s-space($name);
			}

			$cname : 'p-#{$name}';
			@if $name == 'default' {
				$cname : 'p';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.padding.all.#{$name}'
			) {
				padding : s-space($name);
			}
			$cname : 'p-b-#{$name}';
			@if $name == 'default' {
				$cname : 'p-b';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.padding.bottom.#{$name}'
			) {
				padding-bottom : s-space($name);
			}
			$cname : 'p-t-#{$name}';
			@if $name == 'default' {
				$cname : 'p-t';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.padding.top.#{$name}'
			) {
				padding-top : s-space($name);
			}
			$cname : 'p-l-#{$name}';
			@if $name == 'default' {
				$cname : 'p-l';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.padding.left.#{$name}'
			) {
				padding-left : s-space($name);
			}
			$cname : 'p-r-#{$name}';
			@if $name == 'default' {
				$cname : 'p-r';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.padding.right.#{$name}'
			) {
				padding-right : s-space($name);
			}
			$cname : 'p-s-#{$name}';
			@if $name == 'default' {
				$cname : 'p-s';
			}
			@include s-register-class(
				$classname : $cname,
				$namespace : 'sugar.padding.side.#{$name}'
			) {
				padding-left : s-space($name);
				padding-right : s-space($name);
			}
		}

		//
		// Text size
		//
		@each $size, $value in sugar('settings.sizes') {
			@include s-register-class(s-#{$size}, 'sugar.size.#{$size}') {
				font-size : s-rem($value);
			}
		}

		//
		// Paddings
		//
		@include s-register-class(no-p-t,'sugar.padding.no.top') {
			padding-top: 0 !important;
		}
		@include s-register-class(no-p-r,'sugar.padding.no.right') {
			padding-right: 0 !important;
		}
		@include s-register-class(no-p-b,'sugar.padding.no.bottom') {
			padding-bottom: 0 !important;
		}
		@include s-register-class(no-p-l,'sugar.padding.no.left') {
			padding-left: 0 !important;
		}
		@include s-register-class(no-p-s,'sugar.padding.no.side') {
			padding-left: 0 !important;
			padding-right: 0 !important;
		}

		//
		// Margins
		//
		@include s-register-class(no-m-t,'sugar.margin.no.top') {
			margin-top: 0 !important;
		}
		@include s-register-class(no-m-r,'sugar.margin.no.right') {
			margin-right: 0 !important;
		}
		@include s-register-class(no-m-b,'sugar.margin.no.bottom') {
			margin-bottom: 0 !important;
		}
		@include s-register-class(no-m-l,'sugar.margin.no.left') {
			margin-left: 0 !important;
		}
		@include s-register-class(no-m-s,'sugar.margin.no.side') {
			margin-left: 0 !important;
			margin-right: 0 !important;
		}

		// colors
		$colors : sugar('settings.colors');
		@each $name, $color in $colors {
			@if $name != classes {
				$modifiers : ();
				@if type-of($color) == map {
					$modifiers : map-get($color, modifiers);
					$color : map-get($color, color);
				}
				$cls : unquote("c-#{$name}");
				@include s-register-class(
					$classname : $cls,
					$namespace : 'sugar.color.#{$name}.color'
				) {
					color : s-color($color);
				}
				$cls : unquote("bkg-#{$name}");
				@include s-register-class(
					$classname : $cls,
					$namespace : 'sugar.color.#{$name}.bkg'
				) {
					background-color : s-color($color);
				}

				// modifiers
				@if $modifiers {
					@each $mod-name, $mod in $modifiers {
						$cls : unquote("c-#{$name}--#{$mod-name}");
						@include s-register-class(
							$classname : $cls,
							$namespace : 'sugar.color.#{$name}.modifier.#{$mod-name}.color'
						) {
							color : s-color($name, $mod-name);
						}
						$cls : unquote("bkg-#{$name}--#{$mod-name}");
						@include s-register-class(
							$classname : $cls,
							$namespace : 'sugar.color.#{$name}.modifier.#{$mod-name}.bkg'
						) {
							background-color : s-color($name, $mod-name);
						}
					}
				}
			}
		}
	}
}
