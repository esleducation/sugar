$_s-nav-inited : false;
@mixin s-nav-init() {
	@if not $_s-nav-inited {
		$_s-nav-inited : true !global;
		%s-nav-bare {
			list-style: none;
			padding: 0;
			margin: 0;
			user-select:none;

			#{s-selector((
				BEM : '.nav__item',
				SMACCS : '.nav-item'
			))} {
				position:relative;
			}
		}
	}
}

@mixin s-nav-justify-bare() {
	// init nav
	@include s-nav-init();

	#{s-selector((
		BEM : '.nav.nav--justify',
		SMACCS : '.nav.nav-justify'
	))} {
		@extend %s-nav-bare;
		display: table;
		width: 100%;

		> li,
		> #{s-selector((
			BEM : '.nav__item',
			SMACCS : '.nav-item'
		))} {
			display: table-cell;
			vertical-align: middle;
			padding-left: s-lnf(padding-vertical);
			padding-right: s-lnf(padding-vertical);
			text-align: center;
		}
	}
}

@mixin s-nav-inline-bare() {
	// init nav
	@include s-nav-init();

	#{s-selector((
		BEM : '.nav.nav--inline',
		SMACCS : '.nav.nav-inline'
	))} {
		@extend %s-nav-bare;
		display: block;

		> li,
		> #{s-selector((
			BEM : '.nav__item',
			SMACCS : '.nav-item'
		))} {
			display: inline-block;
			padding-left : s-lnf(padding-horizontal);
			padding-right : s-lnf(padding-horizontal);

			&:last-of-type {
				padding-right: 0 !important;
			}
			&:first-of-type {
				padding-left: 0 !important;
			}
		}
	}
}

@mixin s-nav-tabs(
	$colors : null
) {
	@include s-nav-tabs-bare();
	@if $colors {
		@include s-nav-tabs-style($colors);
	}
}

@mixin s-nav-tabs-bare() {
	@include s-nav-init();

	// base
	#{s-selector((
		BEM : '.nav.nav--tabs',
		SMACCS : '.nav.nav-tabs'
	))} {
		@extend %s-nav-bare;

		> li,
		> #{s-selector((
			BEM : '.nav__item',
			SMACCS : '.nav-item'
		))} {

			// font-size : s-lnf(font-size);
			@include s-corner(
				$top-left : s-lnf(border-radius),
				$top-right : s-lnf(border-radius)
			);
			// margin-right: s-space(smaller);
			padding : s-lnf(padding-vertical) s-lnf(padding-horizontal);
			float: left;
			cursor: pointer;

			&.disabled,
			#{s-selector((
				BEM : '&.nav__item--disabled',
				SMACCS : '&.is-disabled'
			))} {
				pointer-events: none;
				opacity: .5;
				cursor: not-allowed;
			}
		}
	}
}

@mixin s-nav-tabs-style(
	$colors : default primary secondary
) {
	// init nav
	@include s-nav-init();

	@if $_sugar-test-arguments {
		// $colors : s-test-argument('s-nav-tabs','colors',map-keys(sugar('settings.colors')),$colors);
	}

	// base
	#{s-selector((
		BEM : '.nav.nav--tabs',
		SMACCS : '.nav.nav-tabs'
	))} {
		@extend %s-nav-bare;

		> li,
		> #{s-selector((
			BEM : '.nav__item',
			SMACCS : '.nav-item'
		))} {
			margin-bottom: -1px;
		}
	}

	// generate each colors
	@each $color in $colors {

		#{s-selector((
			BEM : '.nav--tabs.nav--#{$color}',
			SMACCS : '.nav--tabs.nav-#{$color}'
		))} {
			border-bottom: 1px solid s-color($color, -opacity .2);
			@include s-clearfix;

			> li,
			> #{s-selector((
				BEM : '.nav__item',
				SMACCS : '.nav-item'
			))} {
				border: 1px solid s-color($color, -opacity .1);
				color : s-color($color);

				#{s-selector((
					BEM : '&.hover',
					SMACCS : '&.is-hover'
				))},
				&:hover {
					background-color : s-color($color, -opacity .1);
				}
				#{s-selector((
					BEM : '&.active',
					SMACCS : '&.is-active'
				))} {
					background-color : s-color($color);
					border-color: s-color($color);
					@if lightness(s-color($color)) > 70 {
						color : s-color($color, -darken 30%);
					} @else {
						color : white;
					}
				}
			}
		}
	}
}
