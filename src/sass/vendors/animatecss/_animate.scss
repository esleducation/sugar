@mixin _s-animatecss-init() { @if index(sugar("settings.components.animate-css.animations"), bounce) {@keyframes bounce {
  from, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }

  90% {
    transform: translate3d(0,-4px,0);
  }
}

%bounce {
  animation-name: bounce;
  transform-origin: center bottom;
}
}
@if index(sugar("settings.components.animate-css.animations"), flash) {@keyframes flash {
  from, 50%, 100% {
    opacity: 1;
  }

  25%, 75% {
    opacity: 0;
  }
}

%flash {
  animation-name: flash;
}
}
@if index(sugar("settings.components.animate-css.animations"), jello) {@keyframes jello {
  from, 11.1%, 100% {
    transform: none
  }
  22.2% {
    transform: skewX(-12.5deg) skewY(-12.5deg)
  }
  33.3% {
    transform: skewX(6.25deg) skewY(6.25deg)
  }
  44.4% {
    transform: skewX(-3.125deg) skewY(-3.125deg)
  }
  55.5% {
    transform: skewX(1.5625deg) skewY(1.5625deg)
  }
  66.6% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg)
  }
  77.7% {
    transform: skewX(0.390625deg) skewY(0.390625deg)
  }
  88.8% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg)
  }
}



%jello{
    animation-name:jello;
    transform-origin: center
}
}
@if index(sugar("settings.components.animate-css.animations"), pulse) {/* originally authored by Nick Pettit - https://github%com/nickpettit/glide */

@keyframes pulse {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  100% {
    transform: scale3d(1, 1, 1);
  }
}

%pulse {
  animation-name: pulse;
}
}
@if index(sugar("settings.components.animate-css.animations"), rubberBand) {@keyframes rubberBand {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, .95, 1);
  }

  100% {
    transform: scale3d(1, 1, 1);
  }
}

%rubberBand {
  animation-name: rubberBand;
}
}
@if index(sugar("settings.components.animate-css.animations"), shake) {@keyframes shake {
  from, 100% {
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

%shake {
  animation-name: shake;
}
}
@if index(sugar("settings.components.animate-css.animations"), swing) {@keyframes swing {
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }

  100% {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

%swing {
  transform-origin: top center;
  animation-name: swing;
}
}
@if index(sugar("settings.components.animate-css.animations"), tada) {@keyframes tada {
  from {
    transform: scale3d(1, 1, 1);
  }

  10%, 20% {
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }

  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  100% {
    transform: scale3d(1, 1, 1);
  }
}

%tada {
  animation-name: tada;
}
}
@if index(sugar("settings.components.animate-css.animations"), wobble) {/* originally authored by Nick Pettit - https://github%com/nickpettit/glide */

@keyframes wobble {
  from {
    transform: none;
  }

  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  100% {
    transform: none;
  }
}

%wobble {
  animation-name: wobble;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceIn) {@keyframes bounceIn {
  from, 20%, 40%, 60%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(.9, .9, .9);
  }

  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(.97, .97, .97);
  }

  100% {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

%bounceIn {
  animation-name: bounceIn;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceInDown) {@keyframes bounceInDown {
  from, 60%, 75%, 90%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0);
  }

  75% {
    transform: translate3d(0, -10px, 0);
  }

  90% {
    transform: translate3d(0, 5px, 0);
  }

  100% {
    transform: none;
  }
}

%bounceInDown {
  animation-name: bounceInDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceInLeft) {@keyframes bounceInLeft {
  from, 60%, 75%, 90%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(-3000px, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(25px, 0, 0);
  }

  75% {
    transform: translate3d(-10px, 0, 0);
  }

  90% {
    transform: translate3d(5px, 0, 0);
  }

  100% {
    transform: none;
  }
}

%bounceInLeft {
  animation-name: bounceInLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceInRight) {@keyframes bounceInRight {
  from, 60%, 75%, 90%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(3000px, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0);
  }

  75% {
    transform: translate3d(10px, 0, 0);
  }

  90% {
    transform: translate3d(-5px, 0, 0);
  }

  100% {
    transform: none;
  }
}

%bounceInRight {
  animation-name: bounceInRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceInUp) {@keyframes bounceInUp {
  from, 60%, 75%, 90%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(0, 3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }

  75% {
    transform: translate3d(0, 10px, 0);
  }

  90% {
    transform: translate3d(0, -5px, 0);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

%bounceInUp {
  animation-name: bounceInUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceOut) {@keyframes bounceOut {
  20% {
    transform: scale3d(.9, .9, .9);
  }

  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  100% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
}

%bounceOut {
  animation-name: bounceOut;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceOutDown) {@keyframes bounceOutDown {
  20% {
    transform: translate3d(0, 10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }

  100% {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

%bounceOutDown {
  animation-name: bounceOutDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceOutLeft) {@keyframes bounceOutLeft {
  20% {
    opacity: 1;
    transform: translate3d(20px, 0, 0);
  }

  100% {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

%bounceOutLeft {
  animation-name: bounceOutLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceOutRight) {@keyframes bounceOutRight {
  20% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0);
  }

  100% {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

%bounceOutRight {
  animation-name: bounceOutRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), bounceOutUp) {@keyframes bounceOutUp {
  20% {
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0);
  }

  100% {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

%bounceOutUp {
  animation-name: bounceOutUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeIn) {@keyframes fadeIn {
  from {opacity: 0;}
  100% {opacity: 1;}
}

%fadeIn {
  animation-name: fadeIn;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInDown) {@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInDown {
  animation-name: fadeInDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInDownBig) {@keyframes fadeInDownBig {
  from {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInDownBig {
  animation-name: fadeInDownBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInLeft) {@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInLeft {
  animation-name: fadeInLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInLeftBig) {@keyframes fadeInLeftBig {
  from {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInLeftBig {
  animation-name: fadeInLeftBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInRight) {@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInRight {
  animation-name: fadeInRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInRightBig) {@keyframes fadeInRightBig {
  from {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInRightBig {
  animation-name: fadeInRightBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInUp) {@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInUp {
  animation-name: fadeInUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeInUpBig) {@keyframes fadeInUpBig {
  from {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%fadeInUpBig {
  animation-name: fadeInUpBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOut) {@keyframes fadeOut {
  from {opacity: 1;}
  100% {opacity: 0;}
}

%fadeOut {
  animation-name: fadeOut;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutDown) {@keyframes fadeOutDown {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
}

%fadeOutDown {
  animation-name: fadeOutDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutDownBig) {@keyframes fadeOutDownBig {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

%fadeOutDownBig {
  animation-name: fadeOutDownBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutLeft) {@keyframes fadeOutLeft {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
}

%fadeOutLeft {
  animation-name: fadeOutLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutLeftBig) {@keyframes fadeOutLeftBig {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

%fadeOutLeftBig {
  animation-name: fadeOutLeftBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutRight) {@keyframes fadeOutRight {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
}

%fadeOutRight {
  animation-name: fadeOutRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutRightBig) {@keyframes fadeOutRightBig {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

%fadeOutRightBig {
  animation-name: fadeOutRightBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutUp) {@keyframes fadeOutUp {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
}

%fadeOutUp {
  animation-name: fadeOutUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), fadeOutUpBig) {@keyframes fadeOutUpBig {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

%fadeOutUpBig {
  animation-name: fadeOutUpBig;
}
}
@if index(sugar("settings.components.animate-css.animations"), flip) {@keyframes flip {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out;
  }

  40% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out;
  }

  50% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in;
  }

  80% {
    transform: perspective(400px) scale3d(.95, .95, .95);
    animation-timing-function: ease-in;
  }

  100% {
    transform: perspective(400px);
    animation-timing-function: ease-in;
  }
}

%animated%flip {
  backface-visibility: visible;
  animation-name: flip;
}
}
@if index(sugar("settings.components.animate-css.animations"), flipInX) {@keyframes flipInX {
  from {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }

  100% {
    transform: perspective(400px);
  }
}

%flipInX {
  backface-visibility: visible !important;
  animation-name: flipInX;
}
}
@if index(sugar("settings.components.animate-css.animations"), flipInY) {@keyframes flipInY {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  100% {
    transform: perspective(400px);
  }
}

%flipInY {
  backface-visibility: visible !important;
  animation-name: flipInY;
}
}
@if index(sugar("settings.components.animate-css.animations"), flipOutX) {@keyframes flipOutX {
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }

  100% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

%flipOutX {
  animation-name: flipOutX;
  backface-visibility: visible !important;
}
}
@if index(sugar("settings.components.animate-css.animations"), flipOutY) {@keyframes flipOutY {
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }

  100% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

%flipOutY {
  backface-visibility: visible !important;
  animation-name: flipOutY;
}
}
@if index(sugar("settings.components.animate-css.animations"), lightSpeedIn) {@keyframes lightSpeedIn {
  from {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }

  60% {
    transform: skewX(20deg);
    opacity: 1;
  }

  80% {
    transform: skewX(-5deg);
    opacity: 1;
  }

  100% {
    transform: none;
    opacity: 1;
  }
}

%lightSpeedIn {
  animation-name: lightSpeedIn;
  animation-timing-function: ease-out;
}
}
@if index(sugar("settings.components.animate-css.animations"), lightSpeedOut) {@keyframes lightSpeedOut {
  from {
    opacity: 1;
  }

  100% {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

%lightSpeedOut {
  animation-name: lightSpeedOut;
  animation-timing-function: ease-in;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateIn) {@keyframes rotateIn {
  from {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }

  100% {
    transform-origin: center;
    transform: none;
    opacity: 1;
  }
}

%rotateIn {
  animation-name: rotateIn;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateInDownLeft) {@keyframes rotateInDownLeft {
  from {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }

  100% {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

%rotateInDownLeft {
  animation-name: rotateInDownLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateInDownRight) {@keyframes rotateInDownRight {
  from {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  100% {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

%rotateInDownRight {
  animation-name: rotateInDownRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateInUpLeft) {@keyframes rotateInUpLeft {
  from {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  100% {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

%rotateInUpLeft {
  animation-name: rotateInUpLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateInUpRight) {@keyframes rotateInUpRight {
  from {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }

  100% {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

%rotateInUpRight {
  animation-name: rotateInUpRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateOut) {@keyframes rotateOut {
  from {
    transform-origin: center;
    opacity: 1;
  }

  100% {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
}

%rotateOut {
  animation-name: rotateOut;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateOutDownLeft) {@keyframes rotateOutDownLeft {
  from {
    transform-origin: left bottom;
    opacity: 1;
  }

  100% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
}

%rotateOutDownLeft {
  animation-name: rotateOutDownLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateOutDownRight) {@keyframes rotateOutDownRight {
  from {
    transform-origin: right bottom;
    opacity: 1;
  }

  100% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
}

%rotateOutDownRight {
  animation-name: rotateOutDownRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateOutUpLeft) {@keyframes rotateOutUpLeft {
  from {
    transform-origin: left bottom;
    opacity: 1;
  }

  100% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
}

%rotateOutUpLeft {
  animation-name: rotateOutUpLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), rotateOutUpRight) {@keyframes rotateOutUpRight {
  from {
    transform-origin: right bottom;
    opacity: 1;
  }

  100% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

%rotateOutUpRight {
  animation-name: rotateOutUpRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideInDown) {@keyframes slideInDown {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

%slideInDown {
  animation-name: slideInDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideInLeft) {@keyframes slideInLeft {
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

%slideInLeft {
  animation-name: slideInLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideInRight) {@keyframes slideInRight {
  from {
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

%slideInRight {
  animation-name: slideInRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideInUp) {@keyframes slideInUp {
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

%slideInUp {
  animation-name: slideInUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideOutDown) {@keyframes slideOutDown {
  from {
    transform: translate3d(0, 0, 0);
  }

  100% {
    visibility: hidden;
    transform: translate3d(0, 100%, 0);
  }
}

%slideOutDown {
  animation-name: slideOutDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideOutLeft) {@keyframes slideOutLeft {
  from {
    transform: translate3d(0, 0, 0);
  }

  100% {
    visibility: hidden;
    transform: translate3d(-100%, 0, 0);
  }
}

%slideOutLeft {
  animation-name: slideOutLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideOutRight) {@keyframes slideOutRight {
  from {
    transform: translate3d(0, 0, 0);
  }

  100% {
    visibility: hidden;
    transform: translate3d(100%, 0, 0);
  }
}

%slideOutRight {
  animation-name: slideOutRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), slideOutUp) {@keyframes slideOutUp {
  from {
    transform: translate3d(0, 0, 0);
  }

  100% {
    visibility: hidden;
    transform: translate3d(0, -100%, 0);
  }
}

%slideOutUp {
  animation-name: slideOutUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), hinge) {@keyframes hinge {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  20%, 60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  40%, 80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1;
  }

  100% {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

%hinge {
  animation-name: hinge;
}
}
@if index(sugar("settings.components.animate-css.animations"), rollIn) {/* originally authored by Nick Pettit - https://github%com/nickpettit/glide */

@keyframes rollIn {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

%rollIn {
  animation-name: rollIn;
}
}
@if index(sugar("settings.components.animate-css.animations"), rollOut) {/* originally authored by Nick Pettit - https://github%com/nickpettit/glide */

@keyframes rollOut {
  from {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
}

%rollOut {
  animation-name: rollOut;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomIn) {@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  50% {
    opacity: 1;
  }
}

%zoomIn {
  animation-name: zoomIn;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomInDown) {@keyframes zoomInDown {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

%zoomInDown {
  animation-name: zoomInDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomInLeft) {@keyframes zoomInLeft {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

%zoomInLeft {
  animation-name: zoomInLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomInRight) {@keyframes zoomInRight {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

%zoomInRight {
  animation-name: zoomInRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomInUp) {@keyframes zoomInUp {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

%zoomInUp {
  animation-name: zoomInUp;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomOut) {@keyframes zoomOut {
  from {
    opacity: 1;
  }

  50% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  100% {
    opacity: 0;
  }
}

%zoomOut {
  animation-name: zoomOut;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomOutDown) {@keyframes zoomOutDown {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  100% {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

%zoomOutDown {
  animation-name: zoomOutDown;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomOutLeft) {@keyframes zoomOutLeft {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
  }

  100% {
    opacity: 0;
    transform: scale(.1) translate3d(-2000px, 0, 0);
    transform-origin: left center;
  }
}

%zoomOutLeft {
  animation-name: zoomOutLeft;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomOutRight) {@keyframes zoomOutRight {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
  }

  100% {
    opacity: 0;
    transform: scale(.1) translate3d(2000px, 0, 0);
    transform-origin: right center;
  }
}

%zoomOutRight {
  animation-name: zoomOutRight;
}
}
@if index(sugar("settings.components.animate-css.animations"), zoomOutUp) {@keyframes zoomOutUp {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  100% {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

%zoomOutUp {
  animation-name: zoomOutUp;
}
} }