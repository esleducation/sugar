//
// Images specific
//

//
// Image rendering
//
@mixin s-image-rendering (
	$mode : auto
) {
	@if ($mode == crisp-edges) {
		-ms-interpolation-mode: nearest-neighbor; // IE8+
		image-rendering: -moz-crisp-edges;
		image-rendering: -o-crisp-edges;
		image-rendering: -webkit-optimize-contrast;
		image-rendering: crisp-edges;
	}
	@else {
		image-rendering: $mode;
	}
}

//
// Background
//
@mixin s-background(
	$repeat : null,
	$size : null,
	$attachment : null,
	$blend-mode : null,
	$clip : null,
	$origin : null,
	$url : null,
	$width : null,
	$height : null,
	$top : null,
	$left : null,
	$x2 : null,
	$x3 : null,
	$x4 : null,
	$position : null
) {
	@if $_sugar-test-arguments {
		$repeat : s-test-argument('s-background','repeat',(repeat,repeat-x,repeat-y,no-repeat),$repeat);
		$size : s-test-argument('s-background','size',(auto,length,cover,contain,initial,inherit),$size);
		$attachment : s-test-argument('s-background','attachment',(scroll,fixed,local,initial,inherit),$attachment);
		$blend-mode : s-test-argument('s-background','blend-mode',(normal,multiply,screen,overlay,darken,lighten,color-dodge,saturation,color,luminosity),$blend-mode);
		$clip : s-test-argument('s-background','clip',(border-box,padding-box,content-box,initial,inherit),$clip);
		$origin : s-test-argument('s-background','origin',(padding-box,border-box,content-box,initial,inherit),$origin);
		$url : s-test-argument('s-background','url',string,$url);
		$width : s-test-argument('s-background','width',number,$width);
		$height : s-test-argument('s-background','height',number,$height);
		$x2 : s-test-argument('s-background','x2','string|boolean',$x2);
		$x3 : s-test-argument('s-background','x3','string|boolean',$x3);
		$x4 : s-test-argument('s-background','x4','string|boolean',$x4);
		$position : s-test-argument('s-background','position',mixed,$position);
	}

	@if $x2 == true {
		$x2 : '@2x';
	}
	@if $x3 == true {
		$x3 : '@3x';
	}
	@if $x4 == true {
		$x4 : '@4x';
	}

	// build background
	$back : ();
	@if $repeat {
		background-repeat: $repeat;
	}
	@if $size {
		background-size: $size;
	} @else {
		@if $height and $width == null {
			background-size: 0 $height;
		} @else if $height == null and $width {
			background-size: $width 0;
		} @else if $height and $width {
			background-size: $width $height
		}
	}
	@if $url {
		background-image: url("#{$url}");
	}
	@if $position {
		background-position: $position;
	} @else {
		@if $top and $left == null {
			background-position: 0 $top;
		} @else if $top == null and $left {
			background-position: $left 0;
		} @else if $top and $left {
			background-position: $left $top
		}
	}

	// resolutions
	$split : _split($url,'.');
	$name : nth($split, length($split)-1);
	@if $x2 and $url {
		$split : set-nth($split, length($split)-1, #{$name}#{$x2});
		$url : _join($split, '.');
		@include s-media($resolution : x2) {
			background-image: url("#{$url}");
		}
	}
	@if $x3 and $url {
		$split : set-nth($split, length($split)-1, #{$name}#{$x3});
		$url : _join($split, '.');
		@include s-media($resolution : x3) {
			background-image: url("#{$url}");
		}
	}
	@if $x4 and $url {
		$split : set-nth($split, length($split)-1, #{$name}#{$x4});
		$url : _join($split, '.');
		@include s-media($resolution : x4) {
			background-image: url("#{$url}");
		}
	}
	@if $attachment {
		background-attachment : $attachment;
	}
	@if $blend-mode {
		background-blend-mode : $blend-mode;
	}
	@if $clip {
		background-clip : $clip;
	}
	@if $origin {
		background-origin : $origin;
	}

	// handle nested
	@include s-handle-nested(background) {
		@content;
	}
}