//
// Some filters
//

//
// filter universal mixin
//
@mixin s-filter(
	$filters
) {
	@each $filter in $filters {
		@include _s-filter($filter);
	}
}
@mixin _s-filter(
	$filter
) {
	$filters : sugar('settings.filters');
	// cssgram
	@if type-of($filter) == string and str-slice($filter,1,8) == 'cssgram-' {
		$name : str-slice($filter,9);
		@if $cssgram and type-of($cssgram) == list and index($cssgram, $name) {
			@extend %cssgram-#{$name} !optional;
		}
	} @else if type-of($filter) == string and map-get($filters, $filter) {
		// apply the registered filter
		$filter : map-get($filters, $filter);
		@if type-of($filter) == map {
			$filter : map-get($filter, filter);
		}
		@include s-filter($filter);
	} @else {
		// loop on each filters
		$filters : ();
		$i : 1;
		@each $f in $filter {
			@if str-index($f,'box-shadow(') {
				$f : str-replace($f,'box-shadow(','');
				$f : str-replace($f,')','');
				box-shadow: $f;
				$filter : remove-nth($filter,$i);
				$i : $i - 1;
			} @else if str-index($f,'text-shadow(') {
				$f : str-replace($f,'text-shadow(','');
				$f : str-replace($f,')','');
				text-shadow: $f;
				$filter : remove-nth($filter,$i);
				$i : $i - 1;
			} @else {
				$filters : append($filters, $f);
			}
			$i : $i + 1;
		}
		@if length($filters) > 0 {
			filter : $filters;
		}
	}
}