//
// Some filters
//

//
// filter universal mixin
//
@mixin s-filter(
	$filters...
) {
	@each $filter in $filters {
		@include _s-filter($filter);
	}
}
@mixin _s-filter(
	$filter
) {

	$filters : sugar('settings.filters');
	// cssgram
	@if type-of($filter) == string and str-slice($filter,1,8) == 'cssgram-' {
		$name : str-slice($filter,9);
		@if $cssgram and type-of($cssgram) == list and index($cssgram, $name) {
			@extend %cssgram-#{$name} !optional;
		}
	} @else if type-of($filter) == string and map-get($filters, $filter) {
		// apply the registered filter
		$filter : map-get($filters, $filter);
		@if type-of($filter) == map {
			$filter : map-get($filter, filter);
		}
		@include s-filter($filter);
	} @else if type-of($filter) != string {
		$filter : s-parse-properties($filter, (
			drop-shadow : true,
			box-shadow : true,
			text-shadow : true,
			blur : true,
			brightness : true,
			contrast : true,
			grayscale : true,
			hue-rotate : true,
			invert : true,
			opacity : true,
			saturate : true,
			sepia : true,
			url : true	
		), (
			box-shadow : bs,
			text-shadow : ts,
			drop-shadow : ds,
			blur : bl,
			brightness : br,
			contrast : con,
			grayscale : gr,
			hue-rotate : hue,
			invert : i,
			opacity : o,
			saturate : sat,
			sepia : sep,
			url : u
		));
		
		// loop on each filters
		$filters : ();
		@each $name, $value in $filter {
			@if $name == box-shadow or $name == text-shadow {
				#{$name} : s-replace-tokens($value);
			} @else {
				$filters : append($filters, unquote("#{$name}(#{s-replace-tokens($value)})"));
			}
		}
		@if length($filters) > 0 {
			filter : $filters;
		}
	}
}