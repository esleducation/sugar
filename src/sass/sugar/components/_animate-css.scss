@include s-component-setup((
	animate-css 				: ( 				// store the animatecss settings
		duration 					: 1s, 				// default animatecss duration
		ease 						: ease-in-out, 		// default animatecss ease
		fill-mode					: both, 			// defaull animatecss fill mode
		animations 					: ()
	)			
));

$_sugar-animate-css-inited : false;
@mixin s-animate-css-init() {
	@if not $_sugar-animate-css-inited {
		$_sugar-animate-css-inited : true !global;
			
		// animate css
		@include _s-animatecss-init();

		%animatecss-animated {
			animation-duration : sugar('settings.components.animate-css.duration');
			animation-fill-mode : sugar('settings.components.animate-css.fill-mode');
			animation-timing-function : sugar('settings.components.animate-css.ease');
		}
	}
}

@mixin s-animate-css(
	$animation
) {
	// init
	@include s-animate-css-init();

	// apply the animation
	@extend %animatecss-animated;
	@extend %#{$animation};
}

@mixin s-animate-css-classes(
	$animations : sugar('settings.components.animate-css.animations')
) {
	// init
	@include s-animate-css-init();
	
	// generate each classes
	@each $anim in $animations {
		.#{$anim} {
			@extend %animatecss-animated;
			@extend %#{$anim} !optional;
		}
	}
}