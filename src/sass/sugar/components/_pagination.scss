@include s-component-setup((
	pagination : (
		generate : ()
	)
));

$_s-pagination-inited : false;
@mixin s-pagination-init() {
	@if not $_s-pagination-inited {
		$_s-pagination-inited : true !global;

		// input
		%s-pagination-container-bare {
			position: absolute;
			top:0; left:0;
			overflow: hidden;
			width:100%; height:100%;
			pointer-events:none;
		}
		%s-pagination-bare {
			top:50%; left:50%;
			@include s-translate(-50%,-50%);
			transform-origin: 50% 50%;
			@include s-ratio(1);
			position:absolute;
			width:100%;
			border-radius: 50%;
		}
	}
}

@mixin s-pagination(
	$colors : null
) {
	@include s-pagination-bare();
	@if $colors {
		@include s-pagination-style($colors);
	}
}

@keyframes s-pagination {
	0% {
		opacity:1;
		width:0;
	}
	100% {
		opacity:0;
		width:150%;
	}
}

@mixin s-pagination-bare() {
	@include s-pagination-init();

	// pass in the component context
	@include s-component-context('pagination') {
		.s-pagination {
			display:inline-block;
		}
		#{s-selector((
			BEM : '.s-pagination__item',
			SMACCS : '.s-pagination-item'
		))} {
			display: inline-block;
			border-radius: s-lnf(border-radius);
			padding : s-lnf(padding-horizontal) s-lnf(padding-vertical);
			height: 1em + s-lnf(padding-horizontal) * 2;
			line-height: 1;
			margin-right : s-lnf(padding-vertical) * .5;
			cursor : pointer;

			&:last-of-type() {
				margin-right:0;
			}
		}
	}
}
@mixin s-pagination-style(
	$colors : sugar('settings.components.pagination.generate.colors')
) {
	// pass in the component context
	@include s-component-context('pagination') {
		@each $color in $colors {
			#{s-selector((
				BEM : (
					'.s-pagination--#{$color}',
					'.color--#{$color} .s-pagination'
				),
				SMACCS : (
					'.s-pagination-#{$color}',
					'.color-#{$color} .s-pagination'
				)
			))} {
				#{s-selector((
					BEM : '.s-pagination__item',
					SMACCS : '.s-pagination-item'
				))} {
					color: s-color($color);
					background: s-color($color, -opacity .1);
					// border:solid 1px s-color($color, -opacity .1);
					@include s-transition(fast);

					&:hover {
						background : s-color($color, -opacity .2);
						@include s-depth(2);
					}
					&.active {
						background : s-color($color);
						color : white;
						// border: 1px solid s-color($color);
					}
				}
			}
		}
	}
}
