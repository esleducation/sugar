$_s-dropdown-component-inited : false;
@mixin s-dropdown-component-init() {
	@if not $_s-dropdown-component-inited {
		$_s-dropdown-component-inited : true !global;

		%s-dropdown-menu {
			visibility: hidden;
			opacity: 0;
			position: absolute;
			top: 100%;
			pointer-events: none;
		}
		%s-dropdown-menu-active {
			visibility: visible;
			opacity: 1;
			pointer-events: all;
		}
	}
}

@mixin s-dropdown-component(
	$colors : null
) {
	@include s-dropdown-component-bare();
	@if $colors {
		@include s-dropdown-component-style($colors);
	}
}

@mixin s-dropdown-component-bare() {

	// init dropdown
	@include s-dropdown-component-init();
	@include s-component('s-dropdown') {
		#{s-component-selector()} {
			&:hover,
			&.active,
			&#{s-component-selector(null, null, 'active')} {
				z-index:1;

				#{s-component-selector('menu')} {
					@extend %s-dropdown-menu-active;
				}
			}

			&:hover,
			&.active,
			&#{s-component-selector(null, null, 'active')} {
				#{s-component-selector('menu')} {
					top: 100%;
				}
			}

			&#{s-component-selector(null, 'up')} {
				#{s-component-selector('menu')} {
					top: auto;
					bottom: 100%;
				}

				&:hover,
				&.active,
				&#{s-component-selector(null, null, 'active')} {
					#{s-component-selector('menu')} {
						top: auto;
						bottom: 100%;
					}
				}
			}
		}

		#{s-component-selector('menu')} {
			@extend %s-dropdown-menu;
			@include s-transition();
		}

		#{s-component-selector('item')} {
			white-space: nowrap;

			> a {
				padding: s-lnf(padding-horizontal) s-lnf(padding-vertical);
				display: block;
			}
		}
	}
}

@mixin s-dropdown-component-style(
	$colors : default primary secondary
) {
	// init dropdown
	@include s-dropdown-component-init();
	@include s-component('s-dropdown') {

		#{s-component-selector('menu')} {
			background: s-color(default);
			@include s-depth(2);
			@include s-transition(fast);
			overflow: hidden;
		}

		#{s-component-selector('item')} {
			border-top: solid 1px s-color(default, -opacity .2);
			@include s-transition(all .1s ease-in-out);
			background-color:white;
			left:0;
			position:relative;
			@include s-transition(fast left);

			&:hover,
			&.active,
			&#{s-component-selector('item', null, 'active')} {
				left:5px;
			}

			> a {
				color : s-color(link) !important;
				display: block;
				width: 100%;
			}
		}


		@each $color in $colors {
			// extend dropdown
			#{s-component-selector(null, $color)} {
				#{s-component-selector('menu')} {
					background-color: s-color($color);
				}
			}
		}
	}
}
