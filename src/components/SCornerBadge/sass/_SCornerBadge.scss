$_s-corner-badge-component-inited : false;
@mixin s-corner-badge-component-init() {
	@if not $_s-corner-badge-component-inited {
		$_s-corner-badge-component-inited : true ! global;

		%corner-badge {
			position: absolute;

			> * {
				position:relative;

			}

			&:before {
				content:'';
				display:block;
				position: absolute;
				border-style: solid;
				border-color: transparent;
			}
		}
	}
}

@mixin s-corner-badge-component-bare(
	$corners : tl tr bl br
) {
	@include s-corner-badge-component-init();
	$componentName : s-component('s-corner-badge');

	// @TODO parse properties
	@if $_sugar-test-arguments {
	}

	#{s-selector($componentName)} {
        $w : s-lnf(padding-vertical) * 2 + s-lnf(font-size);
    	font-size : s-lnf(font-size);
    	width: $w;
    	height: $w;
    	padding: s-lnf(padding-vertical) * .4;

    	&:before {
    		border-width: $w / 2;
    	}
    }

	@if (index($corners, tl)) {
		#{s-selector($componentName, null, 'tl')} {
			top:0; left:0;

			&:before {
				border-right-color: transparent !important;
				border-bottom-color: transparent !important;
				border-left-color: transparent !important;
				top:0; left:0;
			}
		}
	}
	@if (index($corners, tr)) {
		#{s-selector($componentName, null, 'tr')} {
			top:0; right:0;
			text-align:right;

			&:before {
				border-bottom-color: transparent !important;
				border-left-color: transparent !important;
				top:0; right:0;
			}
		}
	}
	@if (index($corners, bl)) {
		#{s-selector($componentName, null, 'bl')} {
			bottom:0; left:0;

			&:before {
				border-top-color: transparent !important;
				border-right-color: transparent !important;
				border-bottom-color: transparent !important;
				bottom:0; left:0;
			}
		}
	}
	@if (index($corners, br)) {
		#{s-selector($componentName, null, 'br')} {
			bottom:0; right:0;

			&:before {
				border-top-color: transparent !important;
				border-right-color: transparent !important;
				border-left-color: transparent !important;
				bottom:0; right:0;
			}
		}
	}
}

@mixin s-corner-badge-component-style(
	$colors : default primary secondary
) {
	// @TODO parse properties
	@if $_sugar-test-arguments {
		// $colors : s-test-argument('s-corner-badge-component-style','colors',map-keys(sugar('settings.colors')),$colors);
	}
	$componentName : s-component('s-corner-badge');

	@each $color in $colors {
		#{s-selector($componentName, null, $color)},
		#{s-selector('color', null, $color)} #{s-selector($componentName)} {
			color: white;

			&:before {
				border-color: s-color($color);
			}
		}
	}
}
