$_s-slideshow-component-inited : false;
@mixin s-slideshow-component-init() {
	@if not $_s-slideshow-component-inited {
		$_s-slideshow-component-inited : true !global;

		// input
		%s-slideshow-component-bare {
			position:relative;
		}
		%s-slideshow-component-slide-bare {
			position:absolute;
			top:0; left:0;
			width:100%; height:100%;
		}
	}
}

@mixin s-slideshow(
) {
	@include s-slideshow-component-bare();
	@include s-slideshow-component-style();
}

@mixin s-slideshow-component-bare(
) {
	@include s-slideshow-component-init();
	$componentName : s-component('s-slideshow');
	@include s-component($componentName) {
		[#{$componentName}] {
			@extend %s-slideshow-component-bare;
		}
		[#{$componentName}-slide] {
			@extend %s-slideshow-component-slide-bare;
		}
	}
}
@mixin s-slideshow-component-style(
) {
	// pass in the component context
	$componentName : s-component('s-slideshow');
	@include s-component($componentName) {
		// [#{$componentName}] {
		// }
		[#{$componentName}-slide] {
			@include s-transition(transform .4s cubic-bezier(0.810, 0.005, 0.735, 1.000));
			@include s-translate(-100%,0);
			overflow: hidden;

			.active ~ & {
				@include s-translate(100%,0);
			}

			&.active {
				@include s-translate(0,0);
				@include s-transition-start();
			}
		}
	}
}
