//
// Media queries specific
//

//
// Universal media mixin
//
$media-keywords : (
	gecko : '.ua-gecko',
	webkit : '.ua-webkit',
	chrome : '.ua-chrome',
	safari : '.ua-safari',
	firefox : '.ua-firefox',
	opera : '.ua-opera',
	ie : '.ua-ie',
	mobile : '.ua-mobile',
	tablet : '.ua-tablet',
	desktop : '.ua-desktop',
	iphone : '.ua-mobile-iphone',
	ipad : '.ua-mobile-ipad',
	ios : '.ua-ios',
	android : '.ua-android',
	webos : '.ua-webos',
	blackberry : '.ua-blackberry',
	retina : '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'
);
@for $idx from 6 through 20 {
	$media-keywords : map-set($media-keywords, 'ie#{$idx}', '.ua-ie-#{$idx}');
}
@mixin s-media(
	$queries...
) {
	@each $querie in $queries {
		@include _s-media($querie) {
			@content;
		}
	}
}
@mixin _s-media(
	$props
) {
	// loop through all keywords
	$refine : ();
	@each $prop in $props {
		$sel : map-get($media-keywords, $prop);
		@if $sel {
			$refine : append($refine, $sel);
			$props : remove-nth($props, index($props, $prop));
		}
	}

	$props : _sugar-parse-properties($props, (
		device : screen handheld print aural braille embossed projection tty tv all,
		min-width : number,
		max-width : number,
		min-height : number,
		max-height : number,
		orientation : landscape portrait
	), (
		device : d,
		min-width: min-w minw,
		max-width: max-w maxw,
		min-height: min-h minh,
		max-height: max-h maxh,
		orientation : o
	));

	$device : map-get-or($props, device);
	$min-width : map-get-or($props, min-width);
	$max-width : map-get-or($props, max-width);
	$min-height : map-get-or($props, min-height);
	$max-height : map-get-or($props, max-height);
	$orientation : map-get-or($props, orientation);

	$media : ();
	@if $device {
		$media : append($media, $device);
	}
	@if $orientation {
		$media : append($media, '(orientation : #{$orientation})');
	}
	@if $min-width {
		$media : append($media, '(min-width : #{$min-width})');
	}
	@if $max-width {
		$media : append($media, '(max-width : #{$max-width})');
	}
	@if $min-height {
		$media : append($media, '(min-height : #{$min-height})');
	}
	@if $max-height {
		$media : append($media, '(max-height : #{$max-height})');
	}

	// append media from refine
	@each $ref in $refine {
		@if str-slice($ref,1,1) != '.' {
			$media : append($media, $ref);
			$refine : remove-nth($refine, index($refine, $ref));
		}
	}

	// construct media querie
	$med : '';
	$idx : 1;
	$med_length : length($media);
	@each $m in $media {
		@if $idx < $med_length {
			$med : '#{$med} #{$m} and';
		} @else {
			$med : '#{$med} #{$m}';
		}
		$idx : $idx + 1;
	}

	@if $med_length > 0 {
		@media #{$med} {
			@if length($refine) {
				#{str-implode($refine)} & {
					@content;
				}
			} @else {
				@content;
			}
		}
	} @else {
		@if length($refine) {
			#{str-implode($refine)} & {
				@content;
			}
		} @else {
			@content;
		}
	}
}