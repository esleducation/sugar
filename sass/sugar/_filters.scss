//
// Some filters
//

//
// filter universal mixin
//
@mixin s-filter(
	$filters...
) {
	@each $filter in $filters {
		@include _s-filter($filter);
	}
}
@mixin _s-filter(
	$filter
) {
	// cssgram
	@if $cssgram and type-of($cssgram) == list and index($cssgram, $filter) {
		@extend %cssgram-#{$filter} !optional;
	} @else {
		$filter : _sugar-parse-properties($filter, (
			drop-shadow : true,
			blur : true,
			brightness : true,
			contrast : true,
			grayscale : true,
			hue-rotate : true,
			invert : true,
			opacity : true,
			saturate : true,
			sepia : true,
			url : true	
		), (
			drop-shadow : ds,
			blur : bl,
			brightness : br,
			contrast : con,
			grayscale : gr,
			hue-rotate : hue,
			invert : i,
			opacity : o,
			saturate : sat,
			sepia : sep,
			url : u
		));
		
		// loop on each filters
		$filters : ();
		@each $name, $value in $filter {
			$filters : append($filters, unquote("#{$name}(#{$value})"));
		}
		filter : $filters;
	}
}

//
// grayscale
//
@mixin grayscale($value: 0%){
	@if $value == 0% {
		filter: none;
		-webkit-filter: none; /* For Webkit browsers */
		-webkit-transition: none; /* Fade to color for Chrome and Safari */
	} 
	@else {
		filter: grayscale($value);
		-webkit-filter: grayscale($value); /* For Webkit browsers */
		filter: gray; /* For IE 6 - 9 */
		-webkit-transition: all .6s ease; /* Fade to color for Chrome and Safari */
		filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+, Firefox on Android */
	}
}

//
// Opacity
//
@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}