//
// colors helpers
// font helpers
// - rem function
// **

//
// Vendors
//
@import 'vendors/sassyStrings/SassyStrings';
@import 'vendors/sassyLists/SassyLists';
@import 'vendors/animatecss/animate.scss';
@import 'vendors/cssgram/cssgram.scss';

//
// Sassline
//
// @import 'vendors/sassline/variables';
// @import 'vendors/sassline/mixins';
// @import 'vendors/sassline/modular-scale';

//
// Functions
//
@import 'functions';

//
// Math
//
@import 'tools/math';

//
// Map
//
@import 'tools/map';

//
// List
//
@import 'tools/list';

//
// Clearfix
//
@import 'clearfix';

//
// Forms
//
@import 'forms';

//
// Images
//
@import 'images';

//
// Animations
//
@import 'animations';

//
// Filters
//
@import 'filters';

//
// Helpers functions
//
@import 'helper-functions';

//
// Helpers mixins
//
@import 'helper-mixins';

//
// Medias
//
@import 'medias';

//
// Typo
//
@import 'typo';

//
// Color
//
@import 'colors';

//
// Shapes
//
@import 'shapes';

//
// Reset
//
@import 'reset';

//
// Variables
//
$_sugar-settings : (								// store all the settings
	reset 						: true, 			// by default, a reset will be applied
	border-box 					: true, 			// set if need to set all as border box model
	typo 						: (
		font-size 					: 16px, 			// default font-size
		line-height 				: 1.618				// default line-height
								),
	colors 						: (), 				// store all the colors
	fonts  						: (), 				// store all the fonts
	transition 					: (), 				// store all the transitions
);		

//
// Sugar mixin
//
@mixin sugar(
	$what
) {
	@if type-of($what) == map {
		// setup
		@include sugar-setup($what);
		// init
		@include sugar-init();
	}
}

//
// Sugar function
//
@function sugar(
	$what
) {
	@if type-of($what) == string and str-index($what, "settings.") {
		// get a configuration
		@return sugar-setting(str-slice($what,10));
	}
}

//
// Get a configuration
//
@function sugar-setting(
	$path
) {
	$parts : str-explode($path, '.');
	$length : length($parts);
	$idx : 0;
	$value : $_sugar-settings;
	@each $part in $parts {
		$idx : $idx + 1;
		$value : map-get($value, $part);
		@if $idx == $length {
			@return $value;
		}
	}
}

//
// Setup
//
@mixin sugar-setup(
	$settings
) {
	$_sugar-settings : map-merge($_sugar-settings, $settings) !global;
}

//
// Init
//
@mixin sugar-init() {
	// reset
	@if sugar('settings.reset') == true {
		@include sugar_reset();
	}
	// border box
	@if sugar('settings.border-box') == true {
		* {
			-webkit-box-sizing: border-box;
			-moz-box-sizing: border-box;
			box-sizing: border-box;
		}
	}
	// vertical rhythm
	html {
		$base-font-size : sugar('settings.typo.font-size');
		$base-line-height : sugar('settings.typo.line-height');
		font-size: $base-font-size;
		line-height: $base-line-height + rem;
	}
}